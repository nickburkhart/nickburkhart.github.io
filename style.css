
/*
 * Set up the keyframes to actually describe the begining and end states of 
 * the animation.  The browser will interpolate all the frames between these 
 * points.  Again, remember your vendor-specific prefixes for now!
 */
@-webkit-keyframes nickOrbit {
    from { -webkit-transform: rotate(0deg) translateX(80px) rotate(0deg); }
    to   { -webkit-transform: rotate(360deg) translateX(80px) rotate(-360deg); }
}
@keyframes nickOrbit {
    from { transform: rotate(0deg) translateX(80px) rotate(0deg); }
    to   { transform: rotate(360deg) translateX(80px) rotate(-360deg); }
}

/*
 * Set up the keyframes to actually describe the begining and end states of 
 * the animation.  The browser will interpolate all the frames between these 
 * points.  Again, remember your vendor-specific prefixes for now!
 */
@-webkit-keyframes kaylaOrbit {
    from { -webkit-transform: rotate(0deg) translateX(-80px) rotate(0deg); }
    to   { -webkit-transform: rotate(360deg) translateX(-80px) rotate(-360deg); }
}
@keyframes kaylaOrbit {
    from { transform: rotate(0deg) translateX(-80px) rotate(0deg); }
    to   { transform: rotate(360deg) translateX(-80px) rotate(-360deg); }
}
.kayla {
  /* 
     * Make the initial position to be the center of the circle you want this
     * object follow.
     */
    position: absolute;
    left: 75px;
    top: 75px;

    /*
     * Sets up the animation duration, timing-function (or easing)
     * and iteration-count. Ensure you use the appropriate vendor-specific 
     * prefixes as well as the official syntax for now. Remember, tools like 
     * CSS Please are your friends!
     */
    -webkit-animation: kaylaOrbit 4s linear infinite; /* Chrome, Safari 5 */
            animation: kaylaOrbit 4s linear infinite; /* Chrome, Firefox 16+, 
                                                      IE 10+, Safari 5 */
}
.nick {
    /* 
     * Make the initial position to be the center of the circle you want this
     * object follow.
     */
    position: absolute;
    left: 75px;
    top: 75px;

    /*
     * Sets up the animation duration, timing-function (or easing)
     * and iteration-count. Ensure you use the appropriate vendor-specific 
     * prefixes as well as the official syntax for now. Remember, tools like 
     * CSS Please are your friends!
     */
    -webkit-animation: nickOrbit 4s linear infinite; /* Chrome, Safari 5 */
            animation: nickOrbit 4s linear infinite; /* Chrome, Firefox 16+, 
                                                      IE 10+, Safari 5 */
  
}
.heart{
  position: absolute;
  left: 35px;
  top: 35px;
}